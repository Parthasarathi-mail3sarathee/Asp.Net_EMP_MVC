@model StudentViewModel;
@{

    ViewData["Title"] = "Home Page";
}

@Html.Hidden("SessionSet", (string)ViewBag.NotValidUser)
<button type="submit" id="Logout" value="Logout" class="lgout" onclick="location.href='@Url.Action("Logout", "Home")'">
    Logout
    <img class="buttontbldeleteimage" src="~/images/logout.png" />
</button>
<div class="EmpContainer">

    Add Employee
    <button type="submit" value="Employee List" class="buttontblAdd" onclick="location.href='@Url.Action("GetDashboard", "Employee")'">
        Employee List
        <img class="buttontbladdimage" src="~/images/emp list.png" />
    </button>
    <h2>Employee Details</h2>
    <div> <span class="msgInner">@ViewBag.msg</span></div>
    <form method="post" id="frmAddEmp">
        <div class="rowform odd">
            <div class="columnform">

                <div class="form-group">
                    @Html.LabelFor(m => m.Name)<br/>
                    @Html.LabelForModel(Model.Name,  new { @class = "viewEmpDetail" })
                </div>

            </div>
            <div class="columnform">

                <div class="form-group">
                    @Html.LabelFor(m => m.Address)<br/>
                    @Html.LabelForModel(Model.Address,  new { @class = "viewEmpDetail" })
                </div>
            </div>
        </div> <div class="rowform">
            <div class="columnform">

                <div class="form-group">
                    @Html.LabelFor(m => m.Role)<br/>
                    @Html.LabelForModel(Model.Role,  new { @class = "viewEmpDetail" })
                </div>

            </div>
            <div class="columnform">

                <div class="form-group">
                    @Html.LabelFor(m => m.Department)<br/>
                    @Html.LabelForModel(Model.Department,  new { @class = "viewEmpDetail" })
                </div>
            </div>
        </div>
        <div class="rowform odd">
            <div class="columnform">

                <div class="form-group">
                    @Html.LabelFor(m => m.Email)<br/>
                    @Html.LabelForModel(Model.Email,  new { @class = "viewEmpDetail" })
                    <span id="validTxtemail" class="msg">Enter valid email id</span>
                </div>

            </div>
            <div class="columnform">

                <div class="form-group">
                    @Html.LabelFor(m => m.DOB)<br/>
                    @Html.LabelForModel(Model.DOB,  new { @class = "viewEmpDetail" })

                </div>
            </div>
        </div>
        <div class="rowform">
            <div class="columnform">
                <div class="form-group">
                    @Html.LabelFor(m => m.DOJ)<br/>
                    @Html.LabelForModel(Model.DOJ,  new { @class = "viewEmpDetail"} )
                </div>
            </div>
            <div class="columnform">
                <div class="form-group">
                    @Html.LabelFor(m => m.SkillSets)<br/>
                    <div id="DivSkillset">
                        @if (Model.SkillSets != null)
                        {
                            foreach (var skill in Model.SkillSets)
                            {
                                <span class="skilsetSpan">@skill</span>
                            }

                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="rowform odd">
            <div class="columnform">
                @Html.HiddenFor(m => m.ID)
            </div>
            <div class="columnform">
                <button type="reset" class="btn btn-primary">Back to Employee List</button>
            </div>
        </div>
    </form>
</div>
